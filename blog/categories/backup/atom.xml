<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: backup | jasonwryan.com]]></title>
  <link href="http://jasonwryan.github.com/blog/categories/backup/atom.xml" rel="self"/>
  <link href="http://jasonwryan.github.com/"/>
  <updated>2013-06-22T17:25:39+12:00</updated>
  <id>http://jasonwryan.github.com/</id>
  <author>
    <name><![CDATA[Jason Ryan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[BitTorrent Sync Alpha]]></title>
    <link href="http://jasonwryan.github.com/blog/2013/03/16/sync/"/>
    <updated>2013-03-16T10:17:00+13:00</updated>
    <id>http://jasonwryan.github.com/blog/2013/03/16/sync</id>
    <content type="html"><![CDATA[<p>{% img left http://dl.dropbox.com/u/261312/Blog-images/syncapp.png 'BitTorrent Sync logo' %}
I have posted about using <a href="http://dropbox.com" title="dropbox homepage">dropbox</a> quite
<a href="https://duckduckgo.com/?sites=jasonwryan.com&amp;q=dropbox" title="DDG search results">a few times</a>
over the last couple of years; it is one of those utilities that quickly insinuates itself
into an indispensable niche in your workflow and, consequently, can be <em>very</em> difficult to
dislodge. Perhaps because it has started to glue together so much of the way I work, I have
been wondering when I would find a replacement that would deliver all, or much, of the
functionality, without the standard
<a href="http://arstechnica.com/security/2012/07/dropbox-confirms-it-got-hacked-will-offer-two-factor-authentication/" title="Ars post on the dropbox hack">cloud security issues</a>,
that seem to bedevil these services.<sup>1</sup></p>

<p>When I saw that BitTorrent had release a distributed synching app called—appropriately—
<a href="http://blog.bittorrent.com/2013/01/24/test-bittorrent-sync-pre-alpha/" title="Blog post on sync release">Sync</a>,
I <a href="http://labs.bittorrent.com/experiments/sync.html" title="Invitation form">signed up for the Alpha</a> and
have been running it in lieu of dropbox for the past three weeks. My initial reaction is,
that for a first release, it is very impressive.</p>

<p>Essentially, Sync uses the
<a href="https://en.wikipedia.org/wiki/Bittorent" title="Wikipedia entry">bittorrent peer-to-peer protocol</a>
and encryption
(<a href="https://en.wikipedia.org/wiki/Aes_256" title="Wikipedia entry on the standard">AES 256</a>
using a private key based on the secret generated for each shared folder)
to sync files between your machines—or anyone with whom you share the secret
for a particular directory. This has several advantages over dropbox, from my perspective.
First and foremost, you are not relying on some third party for security<sup>2</sup>, storage
and uptime. Secondly, all of the traffic between your devices is encrypted. And finally,
it is free (sadly, only as in beer).</p>

<h3>Positives</h3>

<p>So what does it do well? It is ridiculously easy to setup. You download the binary, start
the app and then (on Linux) use the web interface to setup your first synching folder by
generating a secret and then nominating a folder to share. On your next machine, enter the
secret and select or create the shared folder and your files will be synched. Done.</p>

<p>On a headless machine, there is a config file that you can create:</p>

<p>{% codeblock lang:sh %}
syncapp --dump-sample-config > syncapp.conf
{% endcodeblock %}</p>

<p>Edit it to suit your requirements, and then start <code>syncapp</code> with that configuration:</p>

<p>{% codeblock lang:sh %}
syncapp --config /path/to/syncapp.conf
{% endcodeblock %}</p>

<p>and you are away, happily synching.</p>

<p>Like other applications that use the bittorrent protocol, it can take a minute or
two for the synching to begin, but once it does I found it—over the Internet as well
as my <acronym title="Local Area Network">LAN</acronym> to be much faster than
dropbox. Another plus.</p>

<h3>Areas for improvement</h3>

<p>It is Alpha software so there are some areas where you can expect to see improvements
with subsequent release. For me, that includes:</p>

<ul>
<li>Better command line tools; the current limited set are servicable, but could do
with more flexibility and options</li>
<li>The ability to create your own secret, rather than rely on generated ones</li>
<li>A less fragile config file; it is written in JSON and the simplest errors will
break it</li>
<li>More Linux love; the other platforms have a much more sophisticated <acronym title="User Interface">UI</acronym></li>
</ul>


<p>A comparison with dropbox is not entirely fair; there are some things that dropbox
does—like versioning—that Sync can/will not do. Dropbox also allows you to host
public files and folders, meaning that you can
<a href="http://jasonwryan.com/blog/2010/01/11/using-dropbox-to-share-dotfiles/" title="Post on using dropbox to host dotfiles">setup a basic webpage</a>
or <a href="https://www.dropbox.com/sh/t6ko1rbl9edy8p4/OkwVLtY5fO" title="My Top 10 Albums">share a photo album</a>.
Sync clearly isn't designed for this.</p>

<p>However, in some other respects, like architectures
for example, Sync is already a better choice. The ARMv6 port means that I am able
to run it on my Raspberry Pi, and that I have been able to update my
<a href="http://jasonwryan.com/blog/2011/11/07/irc-dzen/" title="Post on IRC highlights">IRC notification system</a>
to use Sync rather than dropbox and it is working perfectly well.</p>

<p>There is one area, though, where I wish the BitTorrent team would be a lot more
forthcoming. There has been an unanswered question on the Sync forums for
over three weeks now asking
<a href="http://forum.bittorrent.com/topic/8816-will-syncapp-be-open-source/" title="Syncapp Forums">will Syncapp be open sourced?</a>
Aside from the issue of whether or not the source will be made available (and I am guessing
that given their reticence to answer the question on their boards the prognosis
is not promising) people using the application now should know under what terms
they are using it.</p>

<p>In the absence of any definitive licensing, I can only assume that the application
is covered by BitTorrent's
<a href="http://www.bittorrent.com/legal/eula" title="Licensing agreement on BitTorrent site">default EULA</a>.
That ambiguity means that I am happy to participate in the
trial and provide feedback, but I won't be using the app for any remotely
sensitive data and I am unlikely to do so until that issue is clarified.</p>

<p>I'll install <a href="http://sparkleshare.org/" title="Sparkleshare site">Sparkleshare</a>
and give that a shot instead…</p>

<h4>Notes</h4>

<ol>
<li>Naturally, there are more issues at play here than just their (in)security policies.</li>
<li>Assuming, of course, you trust what BitTorrent pack into the binary…</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rsync + SSH Backups]]></title>
    <link href="http://jasonwryan.github.com/blog/2011/11/28/rsync/"/>
    <updated>2011-11-28T12:23:00+13:00</updated>
    <id>http://jasonwryan.github.com/blog/2011/11/28/rsync</id>
    <content type="html"><![CDATA[<p><img src="http://dl.dropbox.com/u/261312/Blog-images/rsync-ssh.png" alt="image" /></p>

<p>I <a href="http://jasonwryan.com/blog/2011/11/18/microserver/" title="Writeup of microserver setup">posted recently about setting up a microserver</a>
and included a
<a href="http://en.wikipedia.org/wiki/Rsync" title="Wikipedia rsync article">rsync</a>
script for backing up my files to the server. At the time, I was running
it manually, but since have sorted out the excludes list and have now
automated it.</p>

<p>My original scheme was to set up a
<a href="http://en.wikipedia.org/wiki/Cron" title="Wikipedia entry on cron">cron job</a> and
mount an
<a href="http://en.wikipedia.org/wiki/Network_File_System_%28protocol%29" title="Wikipedia NFS protocol article">NFS share</a>
before rsync’ing the directories across. In the end, I went with SSH and
<a href="http://en.wikipedia.org/wiki/Public-key_cryptography" title="Wikipedia: public key cryptography">public key authentication</a>
as debugging all of the various permissions issues with the NFS share
did not seem worth the effort.</p>

<p>First, on my local desktop, I created the keypair called, inventively,
rsync:</p>

<p>{% codeblock lang:sh %}
ssh-keygen -t rsa -f rsync
mv rsync ~/.ssh &amp;&amp; chmod 600 ~/.ssh/rsync
ssh-copy-id -i rsync.pub jason@microserver
{% endcodeblock %}</p>

<p>This keypair was created <em>without a passphrase</em> so that the script could
be successfully called from <code>cron</code>. To slightly increase the security
around a key without a passphrase, I used the from option in
authorized_keys<sup>1</sup>, to restrict access to the IP address of the client
machine(s), like so:</p>

<p>{% codeblock lang:sh %}
from="192.168.1.10*" ssh-rsa AAAAB3Nza...
{% endcodeblock %}</p>

<p>It was then just a matter of adding a line to my <code>crontab</code>:</p>

<p>{% codeblock lang:sh %}
crontab -e
00 22 * * * /home/jason/Scripts/runbackup
{% endcodeblock %}</p>

<p>To further simplify matters, I created an alias in <span class="file">$HOME/.ssh/config</span> for
the SSH command:</p>

<p>{% codeblock .ssh/config %}
Host backups
   Hostname 192.168.1.200
   Port 0000
   User jason
   IdentityFile ~/.ssh/rsync
{% endcodeblock %}</p>

<p>And I was done. Everynight at 10pm, all of my data will be backed up to
the server. The rsync command in the script:</p>

<p>{% codeblock runbackup.sh %}</p>

<h1>!/bin/sh</h1>

<h1>Backup to remote server over SSH</h1>

<p>rsync -azP --delete --exclude-from=/home/jason/Scripts/excludes.txt \</p>

<pre><code>--log-file=/home/jason/Documents/rsync-$(date +%d%m%y).log \
-e ssh /home/jason /etc backups:Backups/Centurion
</code></pre>

<p>{% endcodeblock %}</p>

<h5>Notes</h5>

<ol>
<li>All of the options are detailed in <a href="http://www.manpagez.com/man/8/sshd/" title="manual page for sshd">man sshd(8)</a>.</li>
</ol>


<p>Creative Commons image from
<a href="http://www.flickr.com/photos/skreuzer/511738484/" title="Flickr image from skreuzer">skreuzer</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tarsnap]]></title>
    <link href="http://jasonwryan.github.com/blog/2011/09/08/tarsnap/"/>
    <updated>2011-09-08T17:55:00+12:00</updated>
    <id>http://jasonwryan.github.com/blog/2011/09/08/tarsnap</id>
    <content type="html"><![CDATA[<p><img src="http://dl.dropbox.com/u/261312/Blog-images/tarsnap.jpg" alt="image" /></p>

<p>I have been using <a href="http://www.tarsnap.com/" title="Tarsnap homepage">Tarsnap</a>
for a couple of months now to backup
<a href="http://jasonwryan.com/blog/2010/10/04/the-setup/" title="My setup">my EeePC</a>.
Tarsnap’s (superb) tagline is: <code>online backups for the truly paranoid.</code></p>

<p>Essentially, Tarsnap stores your encrypted backups on
<a href="http://aws.amazon.com/s3//192-5766046-6455343/" title="Amazon page">Amazon’s S3 servers</a>,
recognizes duplicate data and avoids storing it again, and only deletes
data once no remaining archives require it. I can recommend it as a
terrific service for a number of reasons.</p>

<p>It is <em><a href="http://www.tarsnap.com/security.html" title="Security page">secure</a></em>.
Developed by the FreeBSD Security Officer, there is a
<a href="http://www.tarsnap.com/bugbounty.html" title="Bug bounty details">bug bounty</a> for
anyone who does discover bugs or security holes. It is very reasonably
priced. It is reliable. And most importantly,
<a href="http://www.tarsnap.com/about.html" title="Tarsnap about page">Dr Colin Percival</a>,
erstwhile child prodigy and developer, is extremely helpful either on
the mailing list or IRC if you have any questions or need help.</p>

<p>If, however, you have a quick look at the
<a href="http://www.tarsnap.com/man-tarsnap.1.html" title="tarsnap(1)">man page</a>, you will
see that it is not exactly a simple application. After a couple of
months of trying to remember all of the relevant flags, I searched for a
script that would simplify the process for me. There are
<a href="http://duckduckgo.com/?q=tarsnap+%2B+bash+script" title="DDG results">a few online</a>,
but they are all intended to fully automate the process (which makes
sense for something like backups)…</p>

<p>What I was looking for, however, was something more interactive: more
along the lines of a prompt. So, realizing I would have to scratch my
own itch, I wrote a wrapper script to assist my failing memory.</p>

<p>The script prints out a menu of the available options and, once you have
selected the activity that you would like (creating a new snapshot,
deleting an old one etc.,), then the script checks if any further input
is required, for example, the name of the snapshot to delete, and then
executes it. It is nothing flash, but it works…</p>

<p><img src="http://dl.dropbox.com/u/261312/Blog-images/tarsnap2.png" alt="image" /></p>

<p>You can <a href="https://bitbucket.org/jasonwryan/eeepc/src/241da582a0fd/Scripts/snap" title="Snap script in mercurial repo">grab the script</a>
from my mercurial repo. It’s written in bash, but if you require
<a href="http://tldp.org/LDP/abs/html/portabilityissues.html" title="Advanced Bash Scripting Guide">portability</a>,
it shouldn’t be too hard to tweak.</p>

<h4>Updated 3/10/11</h4>

<p>I have rewritten the script to be
<a href="http://pubs.opengroup.org/onlinepubs/9699919799/" title="POSIX Standard at the Open Group">POSIX compliant</a>
and also to better conform to basic UNIX behaviours, in terms of the
options etc. It should now be good to run in most shells.</p>

<h5>Notes</h5>

<p>Creative Commons licensed image by
<a href="http://www.flickr.com/photos/declanjewell/2447653142/" title="Flickr image credit">Declan TM</a></p>
]]></content>
  </entry>
  
</feed>
