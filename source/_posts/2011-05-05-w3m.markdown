---
layout: post
title: "w3m, Surfraw and Yanking URLs"
date: 2011-05-05 19:57
comments: true
categories: [surfraw, linux, browser, hack]
---
![image](/images/post_images/w3m.png)

I posted a couple of weeks ago about 
[how much I was enjoying Surfraw](http://jasonwryan.com/blog/2011/04/13/archwiki-elvis-for-surfraw/ "My post on the Arch Wiki elvis"),
to the point of writing a couple of my own *elvi*. As part of the
ongoing tweaking of my Surfraw experience, I have been experimenting
with different 
[text-based browsers](http://en.wikipedia.org/wiki/Text-based_web_browser "Wikipedia entry: text browsers"),
to see which one best fits my workflow.

I have previously been using both
[links](http://www.jikos.cz/~mikulas/links/ "Links homepage (Spartan enough for you?)")
and it’s homophone,
[lynx](http://lynx.browser.org/ "See you, and raise you..."). While
these have been perfectly acceptable, they weren’t quite providing the
level of functionality —and integration with my vim-oriented workflow—
that I was looking for. Enter
[w3m](http://w3m.sourceforge.net/ "Lavish, by comparison...").

> w3m is a text-based web browser as well as a pager like \`more’ or
> \`less’. With w3m you can browse web pages through a terminal emulator
> window (xterm, rxvt or something like that). Moreover, w3m can be used
> as a text formatting tool which typesets HTML into plain text.

w3m is a step up from the other two for a variety of reasons. It
supports tables, frames, SSL connections, color and inline images. It
also renders pages in a form as true to their original layout as
possible. The killer features on top of that are, for me, the above
mentioned rendering of HTML as text (meaning you can save content
easily), and the customizable keybinds.

There was however, one significant sticking point. After countless hours
fruitlessly searching, I was unable to find a way to yank URLs to the
clipboard. As I have been spending a little time of late on 
[Unix & Linux Stack Exchange](http://unix.stackexchange.com/ "Unix & Linux Stack Exchange"),
I thought I would ask the good folk there…

Less than fourty hours later, I had an answer so simple and elegant,
that I was literally grinning when I read it. It deserves quoting in
full. It is that ingenious.

> Set the “External Browser” option to
> `sh -c 'echo "$0" | xsel'`
>
> You can use xsel -b to use the clipboard instead of the primary
> selection. An alternative to
> [xsel](http://www.vergenet.net/~conrad/software/xsel/ "xsel homepage")
> is [xclip](http://sourceforge.net/projects/xclip/ "xclip homepage")
> (xclip for the primary selection, xclip -selection CLIPBOARD for the
> clipboard).
>
> In <span class="file">~/.w3m/config</span>, that’s the extbrowser setting.
> Then press M to copy (yank) the URL of the current page, or ESCM to
> copy the URL of the link under the cursor.
>
> You can use the second or third external browser for that instead;
> then the key combination is 2M or 3M or 2ESCM or 3ESCM.
> [Gilles on Unix & Linux Stack Exchange](http://unix.stackexchange.com/questions/12497/yanking-urls-in-w3m/12572#12572 "THE answer")

This simple hack means that it is now trivial to yank either the URL of
the current page, or of the link under the cursor to primary selection.
It was just a matter then of adding some intuitive keybinds – as the <kbd>M</kbd>
and <kbd>Escape</kbd><kbd>M</kbd> combination are redolent of 
[the unamed editor](http://en.wikipedia.org/wiki/Editor_war "Emacs vs Vi"):

{% codeblock lang:vim %}
keymap y EXTERN      
keymap Y EXTERN_LINK
{% endcodeblock %}

The perfect [UNIX solution](http://en.wikipedia.org/wiki/Unix_philosophy "The UNIX philosophy on Wikipedia")…

#### Updated 8/5/11

Gilles has edited and updated his answer with a slight change:

{% codeblock lang:sh %}
sh -c 'printf %s "$0" | xsel'
{% endcodeblock %}

This prevents a new line being appended.
