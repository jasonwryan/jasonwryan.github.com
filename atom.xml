<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[jasonwryan.com]]></title>
  <link href="http://jasonwryan.github.com/atom.xml" rel="self"/>
  <link href="http://jasonwryan.github.com/"/>
  <updated>2012-03-27T12:39:46+13:00</updated>
  <id>http://jasonwryan.github.com/</id>
  <author>
    <name><![CDATA[Jason Ryan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Dropbox to Share Dotfiles]]></title>
    <link href="http://jasonwryan.github.com/blog/2010/01/11/using-dropbox-to-share-dotfiles/"/>
    <updated>2010-01-11T11:10:00+13:00</updated>
    <id>http://jasonwryan.github.com/blog/2010/01/11/using-dropbox-to-share-dotfiles</id>
    <content type="html"><![CDATA[<p>I regularly back up all my dotfiles to <a href="http://www.dropbox.com/" title="Synch your computers securely...">Dropbox</a>
as a matter of course. I had intended, at some point, to set up a
<a href="http://git-scm.com/" title="Online version control system">Git repo</a> to automate the process and to make it easier to share these files with others.</p>

<p>However, best intentions etc., in the end it was far easier to simply extend what I was already doing using Dropbox.</p>

<p>First, I created a directory in my <span class="file">Dropbox/Public</span> that would contain the dotfiles I wanted to share:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>mkdir Dropbox/Public/Configs
</span></code></pre></td></tr></table></div></figure>


<p>Then it was just a matter of creating links to the files I wanted to host there:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>Dropbox/Public/Configs
</span><span class='line'><span class="nv">$ </span>ln -s ../../path/to/dotfile
</span><span class='line'>…
</span></code></pre></td></tr></table></div></figure>


<p>The next step was to create a simple <acronym title="HyperText Markup Language">HTML</acronym> page
(and a stylesheet to make it look presentable) and drop them into the same directory.</p>

<p><a href="http://dl.dropbox.com/u/261312/Configs/index.html" title="jason's dotfile repo"><img src="http://dl.dropbox.com/u/261312/Blog-images/dropbox-repo.png"></a></p>

<h3>Caveat</h3>

<p>Dropbox has the very handy feature of retaining versions of all the files you upload. Unfortunately, in this case, that means that the symlinks will always point to the file that you originally set them at — <em>irrespective of any updates you overwrite them with</em>.</p>

<p>So, if you change any of the files significantly, you will need to recreate the symlink…</p>

<h4>Update</h4>

<p>It seems that the symlink system does work: Dropbox will respect the latest version. YMMV.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[dzen2 and conky-cli in dwm]]></title>
    <link href="http://jasonwryan.github.com/blog/2009/11/21/dzen2-and-conky-cli-in-dwm/"/>
    <updated>2009-11-21T12:07:00+13:00</updated>
    <id>http://jasonwryan.github.com/blog/2009/11/21/dzen2-and-conky-cli-in-dwm</id>
    <content type="html"><![CDATA[<p>I struggled over the last couple of days to pipe conky into a Dzen2 status bar alongside the default dwm bar.</p>

<p>Here is how I sorted it.</p>

<p>First, I installed <code>conky-cli</code> and <code>dzen2</code>. Conky-cli is in AUR, and dzen2 is in Community:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>pacman -S dzen2 <span class="o">&amp;&amp;</span> yaourt conky-cli
</span></code></pre></td></tr></table></div></figure>


<p>Then it was a matter of setting up the relevant files.</p>

<figure class='code'><figcaption><span>.xinitrc.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/bin/sh</span>
</span><span class='line'><span class="c"># ~/.xinitrc</span>
</span><span class='line'>setxkbmap -option terminate:ctrl_alt_bksp &amp;amp;
</span><span class='line'><span class="nb">eval</span> <span class="sb">`</span>cat ~/.fehbg<span class="sb">`</span> &amp;amp;
</span><span class='line'>numlockx &amp;amp;
</span><span class='line'>xscreensaver -no-splash &amp;amp;
</span><span class='line'><span class="c"># Dzen &amp;amp; conky</span>
</span><span class='line'><span class="o">(</span>sleep 15s &amp;amp;&amp;amp; conky | dzen2 -x <span class="s1">&#39;500&#39;</span> -e <span class="s1">&#39;&#39;</span> -fg <span class="s1">&#39;#dcdcdc&#39;</span> -bg <span class="s1">&#39;#3f3f3f&#39;</span> <span class="se">\</span>
</span><span class='line'>-w <span class="s1">&#39;650&#39;</span> -ta r -fn <span class="s1">&#39;-*-terminus-*-r-normal-*-*-120-*-*-*-*-iso8859-*&#39;</span> -p <span class="o">)</span> &amp;amp;
</span><span class='line'><span class="c"># Start dwm</span>
</span><span class='line'><span class="nb">exec </span>ck-launch-session ~/Scripts/dwm-start
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>.conkyrc .sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>background no
</span><span class='line'>out_to_console yes
</span><span class='line'>update_interval 2
</span><span class='line'>total_run_times 0
</span><span class='line'>use_spacer none
</span><span class='line'>double_buffer yes
</span><span class='line'>TEXT
</span><span class='line'>${if_existing /sys/class/power_supply/BAT0/present}^i(/home/jason/Build/dwm/dzen/bat.xbm)…</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>dwm-start .sh </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>while true; do 
</span><span class='line'>    dwm >/dev/null
</span><span class='line'>done</span></code></pre></td></tr></table></div></figure>


<p>The key is —and it took me a while to work it out— to delay the loading of conky until <em>after</em> dwm has painted it&#8217;s
status bar; otherwise <code>conky | dzen2</code> is obscured.</p>

<p>Now, the “before” shot:</p>

<p><img src="http://dl.dropbox.com/u/261312/Blog-images/conky-dzen.png"></p>

<p>…and the finished product:</p>

<p><a href="http://www.flickr.com/photos/jasonwryan/4121324068/" title="Conky-cli to dzen2 in dwm on Arch by jasonwryan, on Flickr" target="_blank"><img src="http://farm3.static.flickr.com/2666/4121324068_6ec29262d7.jpg" width="500" height="293" alt="Conky-cli to dzen2 in dwm on Arch"/></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Changing Karmic's Login Screen]]></title>
    <link href="http://jasonwryan.github.com/blog/2009/11/07/changing-karmics-login-screen/"/>
    <updated>2009-11-07T18:46:00+13:00</updated>
    <id>http://jasonwryan.github.com/blog/2009/11/07/changing-karmics-login-screen</id>
    <content type="html"><![CDATA[<p>With Ubuntu 9.10, Karmic Koala, they have dispensed with the GDM in order to
accelerate boot time. This has made for a faster boot, but a side effect has
been that there is no longer a straightforward way to theme your login - and
the default isn’t just ugly, it’s fugly…</p>

<p>Fear not. It can be fixed.</p>

<p>The first thing you want to do is replace the background image. You can find it
at <code>/usr/share/images/xsplash</code>.</p>

<p>Before doing anything rash, make a copy of the directory:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo cp -r /usr/share/images/xsplash ~/xsplash-backup
</span></code></pre></td></tr></table></div></figure>


<p>Then delete all of the images that begin with <code>bg_</code>:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo rm /usr/share/images/xsplash/bg_*
</span></code></pre></td></tr></table></div></figure>


<p>Use the gimp to create a background image for your desktop and save it into
this directory, and name it <code>bg_2560x1600.jpg</code> …irrespective of the resolution
of your screen. Leave the other images as they are: the logo and the
marvellously named throbber will sit over your new background as you boot up…</p>

<p>Next you can change the colours of the login box to complement your new
background. This is all controlled in
<code>/usr/share/themes/HumanLogin/gtk-2.0/gtkrc</code>.</p>

<p>Again, make a copy:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo cp /usr/share/themes/HumanLogin/gtk-2.0/gtkrc <span class="se">\</span>
</span><span class='line'>/usr/share/themes/HumanLogin/gtk-2.0/gtkrc-backup
</span></code></pre></td></tr></table></div></figure>


<p>Then open the file and edit the relevant lines of code at the beginning of the
file:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo vim /usr/share/themes/HumanLogin/gtk-2.0/gtkrc
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dl.dropbox.com/u/261312/Blog-images/karmic-text.png" title="'Screenshot of editing text'" ></p>

<p>As you can see, the colour scheme I have chosen uses dark grey to match my
desktop. Feel free to experiment, you can’t really break anything…</p>

<p><a href="http://www.flickr.com/photos/jasonwryan/4081800113/" title="Customized Karmic Login Screen by jasonwryan, on Flickr"><img src="http://farm3.staticflickr.com/2536/4081800113_d4b98a9b3c.jpg" width="500" height="313" alt="Customized Karmic Login Screen"></a></p>

<p>Simple, really.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install .otf Fonts in OpenOffice]]></title>
    <link href="http://jasonwryan.github.com/blog/2009/03/17/install-otf-fonts-in-openoffice/"/>
    <updated>2009-03-17T19:51:00+13:00</updated>
    <id>http://jasonwryan.github.com/blog/2009/03/17/install-otf-fonts-in-openoffice</id>
    <content type="html"><![CDATA[<p>OpenOffice won’t recognize TrueType fonts with the extension <code>.otf</code>, so you need to convert them to <code>.ttf</code>
in order to use them in that suite.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo apt-get install fontforge
</span></code></pre></td></tr></table></div></figure>


<p>If all the <code>.otf</code> files are in the same folder, then you are good to go.</p>

<p>First, you need the conversion script, which I found in <a href="url=http://www.stuermer.ch/blog/convert-otf-to-ttf-font-on-ubuntu.html]this%20post[/url">this post</a>:</p>

<figure class='code'><figcaption><span>otf2ttf.sh </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="c">#!/usr/local/bin/fontforge</span>
</span><span class='line'><span class="c"># Quick and dirty hack: converts a font to truetype (.ttf)</span>
</span><span class='line'>Print<span class="o">(</span><span class="s2">&quot;Opening &quot;</span>+<span class="nv">$1</span><span class="o">)</span>;
</span><span class='line'>Open<span class="o">(</span><span class="nv">$1</span><span class="o">)</span>;
</span><span class='line'>Print<span class="o">(</span><span class="s2">&quot;Saving &quot;</span>+<span class="nv">$1</span>:r+<span class="s2">&quot;.ttf&quot;</span><span class="o">)</span>;
</span><span class='line'>Generate<span class="o">(</span><span class="nv">$1</span>:r+<span class="s2">&quot;.ttf&quot;</span><span class="o">)</span>;
</span><span class='line'>Quit<span class="o">(</span>0<span class="o">)</span>;
</span></code></pre></td></tr></table></div></figure>


<p>Save it as <code>otf2ttf.sh</code> into the folder with the <code>.otf</code> files.</p>

<p>Then run:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="k">for </span>i in *.otf; <span class="k">do </span>fontforge -script otf2ttf.sh <span class="nv">$i</span>; <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p>Move all the converted fonts to your your shared directory:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo mv *ttf /usr/share/fonts/truetype/myfonts/
</span></code></pre></td></tr></table></div></figure>


<p>And then change the permissions and reload the cache:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>sudo chmod go+rx /usr/share/fonts/truetype/myfonts/
</span><span class='line'>sudo chmod go+rx /usr/share/fonts/truetype/myfonts/*.ttf
</span><span class='line'>sudo <span class="nb">fc</span>-cache -f -v
</span></code></pre></td></tr></table></div></figure>


<p>And the fonts will now appear in OpenOffice. Easy.</p>
]]></content>
  </entry>
  
</feed>
